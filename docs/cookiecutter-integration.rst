.. _cookiecutter-integration:

============================================
Using Cookiecutter templates with PyScaffold
============================================

`Cookiecutter <https://cookiecutter.readthedocs.org>`_ is a flexible utility
that allows the definition of templates for a diverse range of software
projects. On the other hand, PyScaffold is focused in a good out-of-the-box
experience for developing distributable Python packages (exclusively).
Despite the different objectives, it is possible to combine the power of both
tools to create a custom Python project setup. For instance, the following
command creates a new package named `mypkg`, that uses a Cookiecutter template,
but is enhanced by PyScaffold features:

.. code-block:: bash

    $ putup mypkg --with-cookiecutter gh:audreyr/cookiecutter-pypackage


Suitable templates
==================

Note that PyScaffold will overwrite some files generated by Cookiecutter,
like ``setup.py``, the ``__init__.py`` file under the package folder
and most of the ``docs`` folder, in order to provide
`setuptools_scm <https://github.com/pypa/setuptools_scm>`_,
`pbr <https://docs.openstack.org/developer/pbr/>`_  and
`sphinx <http://www.sphinx-doc.org>`_ integration.
Therefore not all Cookiecutter templates are suitable for this approach.

Ideally, interoperable templates should focus on the file structure inside the
package folder instead of packaging or distributing, since PyScaffold already
handles it under-the-hood. However, the following files can be safely
generated by a template (will not be overwritten)::

    <project root>/docs/index.rst
    <project root>/tests/conftest.py
    <project root>/README.rst
    <project root>/AUTHORS.rst
    <project root>/LICENSE.txt
    <project root>/CHANGES.rst
    <project root>/setup.cfg
    <project root>/requirements.txt
    <project root>/test-requirements.txt
    <project root>/.coveragerc

In addition, PyScaffold runs Cookiecutter with the ``--no-input`` flag
activated and thus the user is not prompted for manual configuration. Instead,
PyScaffold injects the following parameters::

    author
    email
    project_name
    package_name
    project_short_description

Accordingly, the template file structure should be similar to::

    cookiecutter-something/
    └── {{cookiecutter.project_name}}/
        └── {{cookiecutter.package_name}}/
            └── ...

See `Cookiecutter <https://cookiecutter.readthedocs.org>`_ for more
information about template creation.
